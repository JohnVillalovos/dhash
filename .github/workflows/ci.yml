name: CI

# If a pull-request is pushed then cancel all previously running jobs related
# to that pull-request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  PY_COLORS: 1

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install/upgrade tox
        run: pip install --upgrade tox
      - name: Run black code formatter (https://black.readthedocs.io/en/stable/)
        run: tox -e black -- --check
      - name: Run flake8 (https://flake8.pycqa.org/en/latest/)
        run: tox -e flake8
      - name: Run mypy static typing checker (http://mypy-lang.org/)
        run: tox -e mypy
      - name: Run isort import order checker (https://pycqa.github.io/isort/)
        run: tox -e isort -- --check

  unit_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python:
          - version: "3.7"
            toxenv: py37
          - version: "3.8"
            toxenv: py38
          - version: "3.9"
            toxenv: py39
          - version: "3.10"
            toxenv: py310
          - version: "3.11"
            toxenv: py311
          - version: '3.12.0-alpha - 3.12' # SemVer's version range syntax
            toxenv: py312
        include:
          - os: macos-latest
            python:
              version: "3.11"
              toxenv: py310,smoke
          - os: windows-latest
            python:
              version: "3.11"
              toxenv: py310,smoke
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python.version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install/upgrade tox
        run: pip install --upgrade tox
      - name: Run tests
        env:
          TOXENV: ${{ matrix.python.toxenv }}
        run: tox --skip-missing-interpreters false
